version: '3.8'

networks:
    readonly:
    writeonly:

services:
    read:
        image: node:16
        working_dir: apps/portal-read
        depends_on:
            - redis
        expose:
            - ${READ_PORT}
        volumes:
            - apps/portal-read/pmpm-lock.yaml:pnpm-lock.yaml
        command:
            sh -c 'rushx install && rushx start'
        networks:
            - readonly

    write:
        image: node:16
        working_dir: apps/portal-write
        depends_on:
            - kafka
        expose:
            - ${WRITE_PORT}
        volumes:
            - apps/portal-write/pmpm-lock.yaml:pnpm-lock.yaml
        command:
            sh -c 'rushx install && rushx start'
        networks:
            - writeonly

    redis:
        image: debian:bullseye-slim
        expose:
            - ${REDIS_PORT}
        networks:
            - readonly

    kafka:
        image: bitnami/kafka:latest
        depends_on:
            - ${ZOOKEEPER_HOST}
        expose:
            - ${KAFKA_PORT}
        environment:
            KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_ADVERTISED_HOST_NAME}
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE}
            LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: ${LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER}
            KAFKA_MESSAGE_MAX_BYTES: ${KAFKA_MESSAGE_MAX_BYTES}
            KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - writeonly

    zookeeper:
        image: bitnami/zookeeper:latest
        expose:
            - ${ZOOKEEPER_PORT}
        networks:
            - writeonly

